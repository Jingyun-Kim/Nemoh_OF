# makefile written by Adrien Combourieu from INNOSEA (adrien.combourieu@innosea.fr)

# Compiler
gtest=$(shell which gfortran 2> /dev/null | grep -o gfortran)
itest=$(shell which ifort 2> /dev/null | grep -o ifort)
# M.A.: this test does not work by me...

MOD_DIR=/tmp/

ifeq ($(gtest), gfortran)
	FC=gfortran
	FFLAGS=  -c                                     # No linker (yet)
	#FFLAGS+= -g                                     # Add extra informations for debugging
	FFLAGS+= -O2                                    # Optimization level
	FFLAGS+= -J$(MOD_DIR)                           # Where to put .mod files
	FFLAGS+= -cpp -DGNUFORT -ffree-line-length-none # Run preprocessor
	#FFLAGS+=-fdefault-real-8			# forcing variables to be double precision
	#if with -fdefault-real-8  change in Common/Constants.f90 ID_DP=1 else ID_DP=0
endif

ifeq ($(itest), ifort)
	FC=ifort
	FFLAGS=-c -cpp
	FFLAGS+= -O2                                    # Optimization level
	#FFLAGS+= -g                                     # Add extra informations for debugging
	FFLAGS+= -module $(MOD_DIR)                           # Where to put .mod files
	# FFLAGS+= -r8					# forcing variables to be double precision
	# if with -r8  change in Common/Constants.f90 ID_DP=1 else ID_DP=0
endif
#FFLAGS2= -O3 -fopenmp -ffree-line-length-0 -finit-local-zero -mcmodel=medium -fbounds-check -fno-automatic

# Output directory
outputdir=./bin

#### same process for second order (QTF) ################
OBJQPRE=$(SRCQPRE:.f90=.o)

#### same process for second order (QTF) ################
#SOURCES FORTRAN QTFpreProc(modules de postprocessing)
SRCQPRE_N=./Common/Identification.f90\
./Common/Logfile.f90\
./Common/Constants.f90\
./Common/Elementary_functions.f90\
./Common/Environment.f90\
./Common/MNemohCal.f90\
./Common/Mesh.f90\
./Common/Face.f90\
./Solver/Core/GREEN_1.f90\
./Solver/Core/INITIALIZE_GREEN.f90\
./Solver/Core/GREEN_2.f90\
./QTF/Common/MFileDirectoryList.f90\
./QTF/Common/MReadInputFiles.f90\
./QTF/PreProcessor/MInfluenceMatrix.f90\
./QTF/PreProcessor/MQpreprocessor.f90\
./QTF/PreProcessor/Main.f90\

#### same process for second order (QTF) ################
OBJQPRE_N=$(SRCQPRE_N:.f90=.o)
################

#### same process for second order (QTF) ################
#SOURCES FORTRAN QTFsolver(Solver modules)
SRCQSOL_N=./Common/Identification.f90\
./Common/Logfile.f90\
./Common/Constants.f90\
./Common/Elementary_functions.f90\
./Common/linear_interpolation_module.f90\
./Common/MCallInterp.f90\
./Common/Environment.f90\
./Common/MNemohCal.f90\
./Common/Mesh.f90\
./Common/Face.f90\
./external/MROMBERG.f90\
./QTF/Common/MFileDirectoryList.f90\
./QTF/Common/MReadInputFiles.f90\
./QTF/Solver/MQSolverPreparation.f90\
./QTF/Solver/MQSolverOutputFiles.f90\
./QTF/Solver/MQSolverAsymp.f90\
./QTF/Solver/MQSolver.f90\
./QTF/Solver/Main.f90\

#SOURCES FORTRAN QTFpostprocN (post processing module)
SRCQPOSTN=./Common/Identification.f90\
./Common/MNemohCal.f90\
./Common/Constants.f90\
./QTF/PostProcessor/MQpostproc.f90\
./QTF/PostProcessor/Main.f90\

OBJPOSTN=$(SRCQPOSTN:.f90=.o)

#### same process for second order (QTF) ################
OBJQSOL_N=$(SRCQSOL_N:.f90=.o)

################
build: bin QTFpreProc_N QTFSolver_N QTFpostproc_N

bin:
	mkdir -p $(outputdir)

# Rules to build
QTFpreProc_N:		$(OBJQPRE_N) 
			@test -d $(outputdir) || mkdir $(outputdir)
			@$(FC) -o $(outputdir)/QTFpreProc $(OBJQPRE_N)
			@echo "QTF pre-processing tool compilation successful!"

clean_QTFpreProc_N:
			@rm -f $(OBJQPRE_N)
			@rm -f $(outputdir)/QTFpreProc

# Rules to build
QTFSolver_N:		$(OBJQSOL_N) 
			@test -d $(outputdir) || mkdir $(outputdir)
			@$(FC) -o $(outputdir)/QTFsolver $(OBJQSOL_N)
			@echo "QTF solver tool compilation successful!"

clean_QTFSolver_N:
			@rm -f $(OBJQSOL_N)
			@rm -f $(outputdir)/QTFsolver

# Rules to build
QTFpostproc_N:		$(OBJPOSTN)
			@test -d $(outputdir) || mkdir $(outputdir)
			@$(FC) -o $(outputdir)/QTFpostProc $(OBJPOSTN)
			@echo "QTF post-processing tool compilation successful!"

clean_QTFpostproc_N:
			@rm -f $(OBJPOSTN)
			@rm -f $(outputdir)/QTFpostProc

# rules for object files
.f.o:
	$(FC) $(FFLAGS) $<
%.o::	%.f90
	$(FC) $(FFLAGS) $< -o $@
	
# # #Copy to local bin directory
install : build

# Remove *.o and main executable
 clean:	
	rm -f *.mod *.o

 cleanall: clean_QTFpreProc_N clean_QTFSolver_N clean_QTFpostproc_N
